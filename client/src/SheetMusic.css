.MusicPage {
  position: relative;
  width: 100%; /* Sets the width to 100% of the viewport width */
  box-sizing: border-box; /* Ensures padding and borders are included in the width */
}

.MusicPage img {
  width: 100%; /* Makes the image take the full width of its parent */
  height: auto; /* Keeps the image's aspect ratio intact */
  display: block; /* Ensures the image takes up its own line */
}

.analyze-button-disabled {
    position: absolute;
    left: 5px;
    top: 5px;
    pointer-events: none;
    opacity: 0.6;
    display: flex;
    align-items: center;
}

.analyze-button-disabled::after {
    content: '';
    display: inline-block;
    margin-left: 5px;
    width: 16px; /* Or use a percentage of the button's height */
    height: 16px; /* Or use a percentage of the button's height */
    border: 2px solid #555; /* Darker color for the spinner */
    border-radius: 50%;
    border-top-color: transparent;
    animation: spin 1s linear infinite;
    align-self: stretch; /* Align vertically */
    box-sizing: border-box;
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

.measure {
  position: relative;
}

.measure::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 0; /* Initially, no width */
  height: 100%;
  background: linear-gradient(to left, rgba(255, 255, 255, 0.5), rgba(255, 255, 255, 1)); /* Semi-transparent gradient to white */
  pointer-events: none; /* Allow clicks to pass through */
}

/* .measure:hover::before, */
.measure.played::before {
  width: 100%; /* On hover, fill the width to 100% */
  background-color: white; /* Color to fill the div */
  transition: var(--transition-time) ease-in-out; /* Transition width property */
  transition-delay: var(--transition-time-delay);
}

.measure-text {
  position: absolute;
  top: -30px; /* Adjust this value to control the vertical position */
  left: 0px;
}
